from tj_feed.grabber.parser import parse_comment, Comment, unicode_normalize, parse_user, User


def test_user_parser():
    source = {"id": 5227, "name": "Pavla Tolokonina", "image": "https://graph.facebook.com/v7.0/10154947640836169/picture?type=square&return_ssl_resources=1&height=600&width=600",
              "karma": 21651, "badge": {"type": "custom", "text": "–ì–µ—Ä–æ–π –¢‚Äî–ñ üèÜ"}, "extra": {}, "comments_shown_count": 3827,
              "participation": [{"article_title": "–û—Ç –ø–∏–∂–∞–º—ã –¥–æ —Ä–æ–±–æ—Ç–∞-–ø—ã–ª–µ—Å–æ—Å–∞: —Å–ø–∏—Å–æ–∫ –ø–æ–¥–∞—Ä–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤—Å–µ —Ö–æ—Ç—è—Ç –ø–æ–ª—É—á–∏—Ç—å –Ω–∞ –ù–æ–≤—ã–π –≥–æ–¥",
                                 "article_path": "/my-wish-is/", "role": "hero", "role_description": ""}], "ban": None}

    result = parse_user(source)

    assert isinstance(result, User)
    assert result.user_id == 5227
    assert result.name == 'Pavla Tolokonina'
    assert result.user_link == 'https://journal.tinkoff.ru/user5227/'
    assert result.karma == 21651
    assert result.badges == '–ì–µ—Ä–æ–π –¢‚Äî–ñ üèÜ'
    assert result.comments_count == 3827
    assert result.avg_rating_per_comment == 21651 / 3827
    assert result.image == 'https://graph.facebook.com/v7.0/10154947640836169/picture?type=square&return_ssl_resources=1&height=600&width=600'
    assert result.extra == dict()


def test_comment_parser():
    source = {"id": 265962, "parent_id": None, "date_added": "2020-10-15T11:22:08.210391+03:00", "is_edited": False, "level": 0,
              "text": "—Ä–∞–Ω–¥–æ–º–Ω—ã–π —Ç–µ–∫—Å—Ç",
              "author": {"id": 46794, "name": "–ú–∞—Ä–∏—è –ò–ª—é—Ö–∏–Ω–∞", "badge": None, "participation": [], "image": "https://sun9--w0&ava=1", "ban": None},
              "rating": {"likes": 1, "dislikes": 17, "user_vote": 0}, "status": "visible", "article_path": "/diary-businessman-podmoskovie-920k/",
              "article_title": "–ö–∞–∫ –∂–∏–≤–µ—Ç –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å –≤ –ü–æ–¥–º–æ—Å–∫–æ–≤—å–µ —Å –¥–æ—Ö–æ–¥–æ–º 920 000 ‚ÇΩ", "ban": None, "image": None}

    result = parse_comment(source)

    assert isinstance(result, Comment)
    assert result.comment_date == '2020-10-15T11:22:08.210391+03:00'
    assert result.comment_content == '—Ä–∞–Ω–¥–æ–º–Ω—ã–π —Ç–µ–∫—Å—Ç'
    assert result.comment_id == 265962
    assert result.comment_rating == 1 - 17
    assert result.comment_link == 'https://journal.tinkoff.ru/diary-businessman-podmoskovie-920k/#c265962'

    assert result.article_path == '/diary-businessman-podmoskovie-920k/'
    assert result.article_title == '–ö–∞–∫ –∂–∏–≤–µ—Ç –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å –≤ –ü–æ–¥–º–æ—Å–∫–æ–≤—å–µ —Å –¥–æ—Ö–æ–¥–æ–º 920 000 ‚ÇΩ'

    assert result.user_id == 46794
    assert result.user_name == '–ú–∞—Ä–∏—è –ò–ª—é—Ö–∏–Ω–∞'
    assert result.user_link == 'https://journal.tinkoff.ru/user46794/'
    assert result.user_image == 'https://sun9--w0&ava=1'


def test_regress():
    case = {'id': 299710, 'parent_id': None, 'date_added': '2020-12-02T23:18:23.717576+03:00', 'is_edited': False, 'level': 0,
            'text': '–£–¥–∞—á–∏ –∞–≤—Ç–æ—Ä—É –≤–æ –≤—Å–µ—Ö –µ–≥–æ –Ω–∞—á–∏–Ω–∞–Ω–∏—è—Ö. –ü–æ –∏—Å—Ç–æ—Ä–∏–∏ —Å–ª–æ–∂–∏–ª–æ—Å—å –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ, —á—Ç–æ –≤—ã –Ω–µ —Å–µ–º—å—è, –∞ —Å–æ–≤–º–µ—Å—Ç–Ω–æ –ø—Ä–æ–∂–∏–≤–∞—é—â–∏–µ –ª—é–¥–∏. –ò –≥—Ä—É—Å—Ç–Ω–æ, —á—Ç–æ –ø–∞—Ä—Ç–Ω—ë—Ä—É –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –∫–æ—Ç–∏–∫ :(',
            'author': None, 'rating': {'likes': 14, 'dislikes': 0, 'user_vote': 0}, 'status': 'visible', 'article_path': '/diary-ordinator-moscow-33k/',
            'article_title': '–ö–∞–∫ –∂–∏–≤–µ—Ç –≤—Ä–∞—á-–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä –≤\xa0–ú–æ—Å–∫–≤–µ —Å\xa0–¥–æ—Ö–æ–¥–æ–º 33\xa0400\xa0‚ÇΩ', 'ban': None, 'image': None}

    result = parse_comment(case)
    assert isinstance(result, Comment)


def test_unicode_normalize_smoke():
    assert unicode_normalize('\xa0U+0550test\n') == ' U+0550test'
